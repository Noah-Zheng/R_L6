library(ggplot2)
data(diamonds)
summary(diamonds)
names(diamonds)
levels(diamonds)
str(dismonds)
str(diamonds)
levels(diamonds$color)
?diamonds
#histgram of price
qplot(x=price, data=diamonds)
mean(diamonds$price)
length(diamonds[diamonds$price < 500])
length(diamonds$price < 500)
length(subset(diamonds, diamonds$price < 500))
length(subset(diamonds, diamonds$price < 250))
length(subset(diamonds, diamonds$price < 15000))
Less500 <- subset(diamonds, diamonds$price < 500)
less250 <- subset(diamonds, diamonds$price < 250)
less15000 <- subset(diamonds, diamonds$price < 15000)
?length
length(diamonds$price)
length(less500$price)
length(Less500$price)
length(less250$price)
View(diamonds)
less15000 <- subset(diamonds, diamonds$price >= 15000)
#histgram of price
qplot(x=price, data=diamonds)
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,2500), breaks = seq(1,2500,50))
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,1500), breaks = seq(1,1500,50))
ggsave('pricepeakhistgram.png')
ggsave('pricepeakhistgram.png')
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,1700), breaks = seq(1,1700,50))
#explore the largest peak in teh price histogram
qplot(x = price, data = diamonds) +
scale_x_continuous(limits = c(1,1700), breaks = seq(1,1700,50)) +
stat_bin(aes(y=..count.., label=..count..), geom='text', vjust=-.5)
library(gridExtra)
p1 <- qplot(x = price, data = subset(diamonds, cut))
# frequency polygon
qplot(x = friend_count, data = subset(df, !is.na(gender)),
binwidth = 10, geom = "freqpoly", color = gender) +
scale_x_continuous(limits = c(0,1000), breaks = seq(0,1000,50))
df <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_grid(~cut)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_grid(~cut)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, summary)
```{r}
library(ggplot2)
data(diamonds)
summary(diamonds)
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut)
by(diamonds$price, diamonds$cut, summary)
?facet_wrap
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
facet_wrap(~cut, scales = "free_y")
ggplot(diamonds, aes(x = price/carat)) +
geom_histogram() +
facet_wrap(~cut) +
scale_x_log10()
ggplot(diamonds, aes(x = price/carat)) +
geom_histogram() +
facet_wrap(~cut, scales = "free_y") +
scale_x_log10()
?ls
library()
search()
data(diamonds)
?diamonds
head(dd)
dd <- read.csv("diamondsbig.csv")
names(dd)
head(dd)
ggplot(dd, aes(price,x)) +
geom_point()
library(ggplot2)
ggplot(dd, aes(price,x)) +
geom_point()
ggplot(dd, aes(x,price)) +
geom_point()
ggplot(dd, aes(x,price)) +
geom_point(alpha = 0.05, position = position_jitter())
cor.test(dd$x, dd$price)
cor.test(dd$y, dd$price)
cor.test(dd$z, dd$price)
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .05, position = position_jitter())
range(dd$depth)
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001, position = position_jitter())+
scale_x_continuous(breaks = c(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001)+
scale_x_continuous(breaks = c(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001)+
scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001, position = position_jitter())+
scale_x_continuous(breaks = seq(0,82,2))
# scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = .001, position = position_jitter()) #+
# scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = 1/100, position = position_jitter()) #+
# scale_x_continuous(breaks = seq(0,82,2))
#price vs depth
ggplot(dd, aes(depth, price)) +
geom_point(alpha = 1/100, position = position_jitter()) +
scale_x_continuous(breaks = seq(0,82,2))
cor.test(dd$depth, dd$price)
cor.test(subset(dd, dd$depth >60 & dd$depth < 70), dd$price)
cor.test(subset(dd, dd$depth >60 & dd$depth < 70)$depth, dd$price)
cor.test(dd$price, dd$depth)
range(dd$price)
summary(dd)
ggplot(dd, aes(carat, price)) +
geom_point() +
xlim(0.2, quantile(carat, .99)) +
ylim(200, quantile(price, .99))
ggplot(dd, aes(carat, price)) +
geom_point() +
xlim(0.2, quantile(dd$carat, .99)) +
ylim(200, quantile(dd$price, .99))
?quantile
ggplot(dd, aes(carat, price)) +
geom_point() +
xlim(0.2, quantile(dd$carat, .99)) +
ylim(200, quantile(dd$price, .99, na.rm = TRUE))
#price v volume
dd$volume <- dd$x * dd$y * dd$z
ggplot(dd, aes(volume, price)) +
geom_line()
ggplot(dd, aes(volume, price)) +
geom_point()
count(dd$volume == 0)
cor.test(dd$volume, dd$price)
s1 <- subset(dd, volume != 0 & volume >= 800)
cor.test(s1$volume, s1$price)
cor.test(s1$price,s1$volume)
s1 <- subset(dd, volume != 0 & volume <= 800)
cor.test(s1$price,s1$volume)
cor.test(s1$volume, s1$price)
ggplot(s1, aes(volume, price)) +
geom_point(alpha = 1/100) +
geom_smooth(method = 'lm')
library(dplyr)
d_by_clarity <- dd %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
View(d_by_clarity)
View(dd)
setwd("C:/Users/Noah/Desktop/Nanoprojects/Term2/eda-course-materials/lesson6")
dd <- read.csv("diamondsbig.csv")
library(ggplot2)
ggplot(dd, aes(log(price))) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_fill_brewer(type = "qual")
ggplot(dd, aes(price)) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_x_log10() +
scale_fill_brewer(type = "qual")
ggplot(dd, aes(log(price))) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_fill_brewer(type = "qual")
dd2 <- diamonds
ggplot(dd2, aes(log(price))) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_fill_brewer(type = "qual")
?scale_fill_brewer
dd2 <- diamonds
ggplot(dd2, aes(log(price))) +
geom_histogram(aes(color = cut)) +
facet_wrap(~color) +
scale_fill_brewer(type = "qual", palette = 3)
names(dd2)
#scatterplot of diamond price vs table, color by cut
ggplot(dd2, aes(table, price)) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual', palette = 2)
#scatterplot of diamond price vs table, color by cut
ggplot(dd2, aes(table, price)) +
geom_point(alpha = 1/5,
aes(color = cut)) +
scale_color_brewer(type = 'qual', palette = 2)
range(dd2$table)
#scatterplot of diamond price vs table, color by cut
ggplot(dd2, aes(table, price)) +
geom_point(alpha = 1/5,
position = position_jitter(),
aes(color = cut)) +
scale_x_continuous(breaks = squ(43,95,2)) +
scale_color_brewer(type = 'qual', palette = 2)
#scatterplot of diamond price vs table, color by cut
ggplot(dd2, aes(table, price)) +
geom_point(alpha = 1/5,
position = position_jitter(),
aes(color = cut)) +
scale_x_continuous(breaks = seq(43,95,2)) +
scale_color_brewer(type = 'qual', palette = 2)
dd2 <- transform(dd2, volume = x*y*z)
View(dd2)
?xlim
summary
summary(dd2$volume)
ggplot(dd2, aes(volume, price)) +
geom_point(aes(color = clarity),
position = position_jitter()) +
scale_y_log10() +
scale_color_brewer(type = 'div', palette = 1) +
xlim(0, quantile(dd2$volume, .99))
ggplot(dd2, aes(volume, price)) +
geom_point(aes(color = clarity),
position = position_jitter()) +
scale_y_log10() +
scale_color_brewer(type = 'div', palette = 2) +
xlim(0, quantile(dd2$volume, .99))
fb <- read.delim("pseudo_facebook.tsv")
names(fb)
fb <- transform(fb, prop_initiated = friendships_inititaed / friend_count)
fb <- transform(fb, prop_initiated = friendships_initiated / friend_count)
head(fb)
#line graph, prop vs tenure, color by year_joined.bucket
fb <- transform(fb, year_joined = floor(2014 - tenure/365))
View(fb)
fb$year_joined.bucket <- cut(fb$year_joined,
breaks = c(2004, 2009, 2011, 2012, 2014))
ggplot(subset(fb, !is.na(fb$prop_initiated)), aes(tenure, prop_initiated)) +
geom_line(aes(color = year_joined.bucket))
ggplot(subset(fb, !is.na(fb$prop_initiated)), aes(tenure, prop_initiated)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = median)
?round
ggplot(subset(fb, !is.na(fb$prop_initiated)), aes(7*round(tenure/7), prop_initiated)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = median)
ggplot(subset(fb, !is.na(fb$prop_initiated)), aes(tenure, prop_initiated)) +
geom_smooth(aes(color = year_joined.bucket),
stat = "summary",
fun.y = median)
ggplot(subset(fb, !is.na(fb$prop_initiated)), aes(tenure, prop_initiated)) +
geom_smooth(aes(color = year_joined.bucket))
fb %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(prop_initiated))
a <- fb %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(prop_initiated))
library(dplyr)
a <- fb %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(prop_initiated))
View(a)
library(dplyr)
a <- fb %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(fb$prop_initiated))
library(dplyr)
a <- fb %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(prop_initiated))
library(dplyr)
a <- subset(fb, !is.na(fb$prop_initiated)) %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(prop_initiated))
library(dplyr)
a <- subset(fb, !is.na(fb$prop_initiated) & !is.na(fb$year_joined.bucket)) %>%
group_by(year_joined.bucket) %>%
summarise(mean = mean(prop_initiated))
ggplot(dd2, aes(cut, price/carat)) +
geom_point(aes(color = cut)) +
facet_wrap(~clarity)
ggplot(dd2, aes(cut, price/carat)) +
geom_point(aes(color = color)) +
facet_wrap(~clarity)
ggplot(dd2, aes(cut, price/carat)) +
geom_point(aes(color = color), position = position_jitter()) +
facet_wrap(~clarity)
